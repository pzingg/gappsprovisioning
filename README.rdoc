= gappsprovisioning

Gemified version of Google Code project at
  http://code.google.com/p/gdatav2rubyclientlib/

Packaged as a gem by Peter Zingg using Dr. Nic's newgem gem.

== DESCRIPTION:

Provisioning API v2.0 Ruby client library for Google Apps. 
Based on GData API v2.0.

 * running even behind authenticated http proxies
 * using REXML (no extra module dependency)

Author: Jerome Bousquie
 
http://personnel.univ-reunion.fr/bousquie/

== FEATURES/PROBLEMS:

See http://code.google.com/apis/apps/gdata_provisioning_api_v2.0_reference.html
for information on the Google Apps Provisioning API

== SYNOPSIS:

See examples in ProvisioningApi.new documentation for handling proxies.

=== Create a new user

adminuser = "root@mydomain.com"
password  = "PaSsWo4d!"
myapps = ProvisioningApi.new(adminuser, password)

new_user = myapps.create_user("jsmith", "john", "smith", "secret", nil, "2048")
puts new_user.family_name
puts new_user.given_name

=== Update a user

user = myapps.retrieve_user('jsmith')
user_updated = myapps.update_user(user.username, user.given_name, user.family_name, nil, nil, "true")

=== Add an alias or nickname

new_nickname = myapps.create_nickname("jsmith", "john.smith")

=== Email lists

new_list = myapps.create_email_list("sale-dep")
new_address = myapps.add_address_to_email_list("sale-dep", "bibi@ruby-forge.org")

=== Error handling

begin
  user = myapps.retrieve_user('noone')
  puts "givenName : "+user.given_name, "familyName : "+user.family_name, "username : "+user.username"
  puts "admin ? : "+user.admin
rescue GDataError => e
  puts "errorcode = " +e.code, "input : "+e.input, "reason : "+e.reason
end

== REQUIREMENTS:

 * net/https
 * cgi
 * rexml

== INSTALL:

sudo gem install gappsprovisioning.gem

== LICENSE:

Apache License, Version 2.0

Copyright (c) 2008 Jerome Bousquie

Licensed under the Apache License, Version 2.0 (the "License"); you may not 
use this file except in compliance with the License. You may obtain a copy 
of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
by applicable law or agreed to in writing, software distributed under the 
License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
OF ANY KIND, either express or implied. See the License for the specific 
language governing permissions and limitations under the License. 
